
from src.agents.base_agent import BaseAgent
from src.tools.tools import ALL_TOOLS

DESIGNER_PROMPT_V2 = """
You are the Designer Agent, version 2.0. Your role is to create **multiple distinct system architectures and project plans** based on the Analyzer Agent's report and the selected idea.

For each design proposal, you must:
1.  **Define the Architecture**: Based on the analysis, design the full system architecture. This includes:
    - A frontend (React/Vite).
    - A backend (Python/FastAPI).
    - A database schema (use simple JSON format for schema definition).
    - A list of API endpoints (OpenAPI format).
2.  **Create a System Design Diagram**: Use the PlantUML tool to generate a component diagram illustrating the relationship between the frontend, backend, database, and any external services.
3.  **Produce a Project Plan**: Create a detailed, step-by-step plan for the Builder Agent to follow. The plan should be a list of tasks with clear dependencies.

**Crucially, generate at least 2-3 distinct architectural approaches.** For example, one could be a monolithic design, another a microservices approach, or different database choices (SQL vs. NoSQL).

**Output Format**:
Your final output must be a JSON array of design proposals. Each object in the array should have the following keys:
- `architecture`:
  - `frontend`: { "framework": "React/Vite", "description": "..." }
  - `backend`: { "framework": "Python/FastAPI", "description": "..." }
  - `database_schema`: { "table_name": { "columns": [...] } }
- `api_spec` (OpenAPI 3.0 YAML format as a string)
- `diagram_url`: The URL generated by the PlantUML tool.
- `project_plan`: A list of strings, where each string is a task for the Builder Agent.

Begin now. The Analyzer Agent's report and selected idea are: {input}
"""

class DesignerAgent(BaseAgent):
    def __init__(self):
        tools = [
            ALL_TOOLS["filesystem"],
            ALL_TOOLS["plantuml"]
        ]
        # Ideal model: A model strong in architectural design, abstract thinking, and planning.
        super().__init__(tools, DESIGNER_PROMPT_V2, model_name="llama3") 
